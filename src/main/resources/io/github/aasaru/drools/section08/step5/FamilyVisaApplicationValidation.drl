package io.github.aasaru.drools.section08.step5

import io.github.aasaru.drools.domain.GroupLeader;
import io.github.aasaru.drools.domain.InvalidPassport;
import io.github.aasaru.drools.domain.Passport;
import io.github.aasaru.drools.domain.InvalidFamilyVisaApplication;
import io.github.aasaru.drools.domain.FamilyVisaApplication;
import io.github.aasaru.drools.LoggingUtil;

rule "Invalidate visa applications with invalid passport"
	when
		$familyVisaApplication: FamilyVisaApplication()
		exists InvalidPassport(
			$familyVisaApplication.passportNumbers.contains(this.passport.passportNumber)
		)
	then
		LoggingUtil.info("Set " + $familyVisaApplication + " invalid as it contains invalid passport");
		insert(new InvalidFamilyVisaApplication($familyVisaApplication));
end

rule "Invalidate visa application where everyone is under 16"
	when
		$familyVisaApplication: FamilyVisaApplication()

		forall (
		  $passport : Passport($familyVisaApplication.passportNumbers.contains(this.passportNumber)),
					  Passport(this == $passport, this.age < 16)
		)
	then
		LoggingUtil.info("Set " + $familyVisaApplication + " invalid as everyone is younger than 16");
		insert(new InvalidFamilyVisaApplication($familyVisaApplication));
end

rule "Choose the leader for the group of people under 18"
	when
		$familyVisaApplication: FamilyVisaApplication()
		$groupLeaderPassport: Passport(
			$familyVisaApplication.passportNumbers.contains(this.passportNumber),
			age < 18
		)

		forall (
		  $passport : Passport($familyVisaApplication.passportNumbers.contains(this.passportNumber)),
					  Passport(this == $passport, this.age <= $groupLeaderPassport.age)
		)
	then
		LoggingUtil.info("Set " + $groupLeaderPassport + " as group leader as the oldest person in group");
		insert(new GroupLeader( $groupLeaderPassport, $familyVisaApplication));
end
